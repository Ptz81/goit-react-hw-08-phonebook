{"version":3,"file":"static/js/540.ed971f7f.chunk.js","mappings":"gOAEaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnBC,EAAW,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,EAChBC,EAAe,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EAEpBC,GAAmBC,EAAAA,EAAAA,IAC9B,CAACT,EALsB,SAAAC,GAAK,OAAIA,EAAMS,MAAV,IAM5B,SAACR,EAAUQ,GACT,OAAOR,EAASQ,QAAO,qBAAGC,KACnBC,cAAcC,SAASH,EAAOE,cADd,GAGxB,I,oBCRUE,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXd,GAAWe,EAAAA,EAAAA,IAAYjB,GAY3B,OACE,kBAAMkB,UAAU,OAAOC,SAZN,SAACC,GACpBA,EAAEC,iBACF,IAAMV,EAAOS,EAAEE,cAAcC,SAASZ,KAAKa,MACrCC,EAASL,EAAEE,cAAcC,SAASE,OAAOD,MAC3CtB,EAASwB,MAAK,SAAAC,GAAO,OAAIA,EAAQhB,KAAKC,gBAAkBD,EAAKC,aAAxC,IACvBgB,MAAM,GAAD,OAAIjB,EAAJ,6BAGNI,GAASc,EAAAA,EAAAA,IAAe,CAAElB,KAAAA,EAAMc,OAAAA,KACjCL,EAAEE,cAAcQ,QACjB,EAEG,WACE,kBAAOC,QAAQ,OAAOb,UAAU,aAAhC,mBAGA,kBACEc,KAAK,OACHrB,KAAK,OACLsB,GAAK,OACLf,UAAU,aACZgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBAAOL,QAAQ,SAASb,UAAU,aAAlC,qBAGA,kBACEc,KAAK,MACHrB,KAAK,SACLsB,GAAG,SACHf,UAAU,aACZgB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEZ,kBAAOJ,KAAK,SAASd,UAAU,MAAMM,MAAM,kBAG9C,E,UCtCH,EARe,WACd,OACC,gBAAKN,UAAU,8BAA8BmB,KAAK,SAAlD,UACC,iBAAMnB,UAAU,kBAAhB,yBAGF,ECkCD,EAnCoB,WAClB,IAAMoB,GAAerB,EAAAA,EAAAA,IAAYT,GAC3BH,GAAQY,EAAAA,EAAAA,IAAYb,GACpBG,GAAYU,EAAAA,EAAAA,IAAYX,GACxBS,GAAWC,EAAAA,EAAAA,MAKjB,OAJAuB,EAAAA,EAAAA,YAAU,WACRxB,GAASyB,EAAAA,EAAAA,MACV,GAAE,CAACzB,IAEDuB,GAAwC,IAAxBA,EAAaG,OAAqB,MAEnD,gCACGpC,IAAS,wBAAKA,IACdE,IAAa,SAAC,EAAD,IACZ+B,IAAgB,eAAIpB,UAAU,eAAd,SACfoB,EAAaI,KAAI,SAACf,GACjB,OACE,gBAAIT,UAAU,eAAd,WACE,yBACGS,EAAQhB,KADX,KACmBgB,EAAQgB,UAE3B,mBACEzB,UAAU,MACV0B,QAAS,kBAAM7B,GAAS8B,EAAAA,EAAAA,IAAelB,EAAQM,IAAtC,EAFX,sBAJgCN,EAAQM,GAY7C,QAKR,EC/Bc,SAASa,IAEtB,IAAMvC,GAAYU,EAAAA,EAAAA,IAAY8B,EAAAA,IAE9B,OACE,iCACE,SAACC,EAAA,EAAD,WACE,gDAEF,SAAClC,EAAD,KACA,yBAAMP,GAAa,4BACnB,SAAC,EAAD,MAGL,C,gFCxBM,IAAMwC,EAAgB,SAAA9C,GAAK,OAAIA,EAAMgD,MAAMC,OAAhB,EAIrBC,EAAiB,SAAAlD,GAAK,OAAIA,EAAMgD,MAAM9C,KAAhB,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Loader/Loader.js","components/ContactList/ContactList.js","components/pages/Contacts.js","redux/tasks/selectors.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getError = state => state.contacts.error;\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const filteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { createContacts } from '../../redux/contacts/api';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const name = e.currentTarget.elements.name.value;\n    const number = e.currentTarget.elements.number.value;\n    if (contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n     dispatch(createContacts({ name, number }));\n    e.currentTarget.reset();\n  }\n    return (\n      <form className='form' onSubmit={handleSubmit}>\n        <label htmlFor='name' className='form_label'>\n          Name\n        </label>\n        <input\n          type=\"text\"\n            name=\"name\"\n            id = 'name'\n            className='form_input'\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor='number' className='form_label'>\n          Number\n        </label>\n        <input\n          type=\"tel\"\n            name=\"number\"\n            id='number'\n            className='form_input'\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          />\n      <input type=\"submit\" className='btn' value='Add contact'/>\n      </form>\n    )\n  }\n","import React from 'react'\n\nconst Loader = () => {\n\treturn (\n\t\t<div className='spinner-border text-success' role='status'>\n\t\t\t<span className='visually-hidden'>Loading...</span>\n\t\t</div>\n\t)\n}\n\nexport default Loader\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filteredContacts, getError, getIsLoading} from \"../../redux/contacts/selectors\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { deleteContacts, fetchContacts } from \"../../redux/contacts/api\";\n\nconst ContactList = () => {\n  const contactItems = useSelector(filteredContacts);\n  const error = useSelector(getError)\n  const isLoading = useSelector(getIsLoading)\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  if(contactItems && contactItems.length === 0) return null;\n  return (\n    <>\n      {error && <h2>{error}</h2>}\n      {isLoading && <Loader/>}\n       {contactItems && <ul className='contact_list'>\n        {contactItems.map((contact) => {\n          return (\n            <li className=\"contact_item\" key={contact.id}>\n              <p>\n                {contact.name}: {contact.phone}\n              </p>\n              <button\n                className=\"btn\"\n                onClick={() => dispatch(deleteContacts(contact.id))}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>}\n      </>\n\n    )\n}\nexport default ContactList;\n","// import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n// import { TaskList } from 'components/TaskList/TaskList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\n// import { fetchTasks } from 'redux/tasks/operations';\nimport { selectLoading } from 'redux/tasks/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n\n  const isLoading = useSelector(selectLoading);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n","export const selectLoading = state => state.tasks.loading;\n\nexport const selectFilter = state => state.tasks.filter;\n\nexport const selectAllTasks = state => state.tasks.items;\n"],"names":["getContacts","state","contacts","items","getError","error","getIsLoading","isLoading","filteredContacts","createSelector","filter","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","className","onSubmit","e","preventDefault","currentTarget","elements","value","number","some","contact","alert","createContacts","reset","htmlFor","type","id","pattern","title","required","role","contactItems","useEffect","fetchContacts","length","map","phone","onClick","deleteContacts","Contacts","selectLoading","Helmet","tasks","loading","selectAllTasks"],"sourceRoot":""}
{"version":3,"file":"static/js/994.35e60e3f.chunk.js","mappings":"0OAEaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnBC,EAAW,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,EAChBC,EAAe,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EAEpBC,GAAmBC,EAAAA,EAAAA,IAC9B,CAACT,EALsB,SAAAC,GAAK,OAAIA,EAAMS,MAAV,IAM5B,SAACR,EAAUQ,GACT,OAAOR,EAASQ,QAAO,qBAAGC,KACnBC,cAAcC,SAASH,EAAOE,cADd,GAGxB,ICZH,EAAyB,4BAAzB,EAA4D,0BAA5D,EAA8F,2B,UCIjFE,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXd,GAAWe,EAAAA,EAAAA,IAAYjB,GAY3B,OACE,kBAAMkB,UAAWC,EAAUC,SAZV,SAACC,GACpBA,EAAEC,iBACF,IAAMX,EAAOU,EAAEE,cAAcC,SAASb,KAAKc,MACrCC,EAASL,EAAEE,cAAcC,SAASE,OAAOD,MAC3CvB,EAASyB,MAAK,SAAAC,GAAO,OAAIA,EAAQjB,KAAKC,gBAAkBD,EAAKC,aAAxC,IACvBiB,MAAM,GAAD,OAAIlB,EAAJ,6BAGNI,GAASe,EAAAA,EAAAA,IAAe,CAAEnB,KAAAA,EAAMe,OAAAA,KACjCL,EAAEE,cAAcQ,QACjB,EAEG,WACE,kBAAOC,QAAQ,OAAOd,UAAU,aAAhC,mBAGA,kBACEe,KAAK,OACHtB,KAAK,OACLuB,GAAK,OACLhB,UAAWC,EACbgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBAAOL,QAAQ,SAASd,UAAU,aAAlC,qBAGA,kBACEe,KAAK,MACHtB,KAAK,SACLuB,GAAG,SACHhB,UAAWC,EACbgB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEZ,kBAAOJ,KAAK,SAASf,UAAWC,EAAYM,MAAM,kBAGrD,E,UC/CH,EAAyB,4BAAzB,EAA4D,0BCS5D,EARe,WACd,OACC,gBAAKP,UAAU,8BAA8BoB,KAAK,SAAlD,UACC,iBAAMpB,UAAU,kBAAhB,yBAGF,ECmCD,EAnCoB,WAClB,IAAMqB,GAAetB,EAAAA,EAAAA,IAAYT,GAC3BH,GAAQY,EAAAA,EAAAA,IAAYb,GACpBG,GAAYU,EAAAA,EAAAA,IAAYX,GACxBS,GAAWC,EAAAA,EAAAA,MAKjB,OAJAwB,EAAAA,EAAAA,YAAU,WACRzB,GAAS0B,EAAAA,EAAAA,MACV,GAAE,CAAC1B,IAEDwB,GAAwC,IAAxBA,EAAaG,OAAqB,MAEnD,gCACGrC,IAAS,wBAAKA,IACdE,IAAa,SAAC,EAAD,IACZgC,IAAgB,eAAIrB,UAAWC,EAAf,SACfoB,EAAaI,KAAI,SAACf,GACjB,OACE,2BACE,yBACGA,EAAQjB,KADX,KACmBiB,EAAQF,WAE3B,mBACER,UAAWC,EACXyB,QAAS,kBAAM7B,GAAS8B,EAAAA,EAAAA,IAAejB,EAAQM,IAAtC,EAFX,sBAJON,EAAQM,GAYpB,QAKR,ECnCc,SAASY,IAEtB,IAAMvC,GAAYU,EAAAA,EAAAA,IAAY8B,EAAAA,IAE9B,OACE,iCACE,SAACC,EAAA,EAAD,WACE,gDAEF,SAAClC,EAAD,KACA,yBAAMP,GAAa,4BACnB,SAAC,EAAD,MAGL,C,gFCrBM,IAAMwC,EAAgB,SAAA9C,GAAK,OAAIA,EAAMgD,MAAMC,OAAhB,EAIrBC,EAAiB,SAAAlD,GAAK,OAAIA,EAAMgD,MAAM9C,KAAhB,C","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/Loader/Loader.js","components/ContactList/ContactList.js","components/pages/Contacts.js","redux/tasks/selectors.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getError = state => state.contacts.error;\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const filteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactForm_button__eSwX9\",\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"wrapper\":\"ContactForm_wrapper__-Umw-\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { createContacts } from 'redux/contacts/api';\nimport { getContacts } from 'redux/contacts/selectors';\nimport css from './ContactForm.module.css'\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const name = e.currentTarget.elements.name.value;\n    const number = e.currentTarget.elements.number.value;\n    if (contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n     dispatch(createContacts({ name, number }));\n    e.currentTarget.reset();\n  }\n    return (\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label htmlFor='name' className='form_label'>\n          Name\n        </label>\n        <input\n          type=\"text\"\n            name=\"name\"\n            id = 'name'\n            className={css.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor='number' className='form_label'>\n          Number\n        </label>\n        <input\n          type=\"tel\"\n            name=\"number\"\n            id='number'\n            className={css.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          />\n      <input type=\"submit\" className={css.button} value='Add contact'/>\n      </form>\n    )\n  }\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactList_button__7kL4l\",\"list\":\"ContactList_list__csErn\"};","import React from 'react'\n\nconst Loader = () => {\n\treturn (\n\t\t<div className='spinner-border text-success' role='status'>\n\t\t\t<span className='visually-hidden'>Loading...</span>\n\t\t</div>\n\t)\n}\n\nexport default Loader\n","import React, { useEffect } from \"react\";\nimport css from './ContactList.module.css'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContacts, fetchContacts } from \"redux/contacts/api\";\nimport Loader from \"components/Loader/Loader\";\nimport { filteredContacts, getError, getIsLoading } from \"redux/contacts/selectors\";\n\n\nconst ContactList = () => {\n  const contactItems = useSelector(filteredContacts);\n  const error = useSelector(getError)\n  const isLoading = useSelector(getIsLoading)\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  if(contactItems && contactItems.length === 0) return null;\n  return (\n    <>\n      {error && <h2>{error}</h2>}\n      {isLoading && <Loader/>}\n       {contactItems && <ul className={css.list}>\n        {contactItems.map((contact) => {\n          return (\n            <li key={contact.id}>\n              <p>\n                {contact.name}: {contact.number}\n              </p>\n              <button\n                className={css.button}\n                onClick={() => dispatch(deleteContacts(contact.id))}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>}\n      </>\n\n    )\n}\nexport default ContactList;\n","import { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectLoading } from 'redux/tasks/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\n\n\nexport default function Contacts() {\n\n  const isLoading = useSelector(selectLoading);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}\n","export const selectLoading = state => state.tasks.loading;\n\nexport const selectFilter = state => state.tasks.filter;\n\nexport const selectAllTasks = state => state.tasks.items;\n"],"names":["getContacts","state","contacts","items","getError","error","getIsLoading","isLoading","filteredContacts","createSelector","filter","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","currentTarget","elements","value","number","some","contact","alert","createContacts","reset","htmlFor","type","id","pattern","title","required","role","contactItems","useEffect","fetchContacts","length","map","onClick","deleteContacts","Contacts","selectLoading","Helmet","tasks","loading","selectAllTasks"],"sourceRoot":""}